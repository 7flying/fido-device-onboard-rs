#ifndef FDO_DATA_H
#define FDO_DATA_H

#pragma once

/* Generated with cbindgen:0.20.0 */

/* This file is automatically generated, do not modify */
#define FDO_DATA_MAJOR 0
#define FDO_DATA_MINOR 1
#define FDO_DATA_PATCH 0


#include <stdarg.h>
#include <stdbool.h>
#include <stdint.h>
#include <stdlib.h>

typedef struct FdoOwnershipVoucher FdoOwnershipVoucher;

/**
 * Free a string returned by libfdo-data functions
 */
void fdo_free_string(char *s);

/**
 * Creates a new OwnershipVoucher from raw data
 *
 * Return value:
 * NULL on error
 * Pointer to an FdoOwnershipVoucher on success
 */
struct FdoOwnershipVoucher *fdo_ownershipvoucher_from_data(const void *data, size_t len);

/**
 * Frees an OwnershipVoucher
 */
void fdo_ownershipvoucher_free(struct FdoOwnershipVoucher *v);

/**
 * Returns the protocol version in the ownership voucher
 *
 * Return value:
 * -1 on error
 * protocol version on success
 */
int32_t fdo_ownershipvoucher_header_get_protocol_version(const struct FdoOwnershipVoucher *v);

/**
 * Returns the GUID of the ownership voucher
 *
 * Return value:
 * NULL on error
 * Pointer to a string containing the GUID on success
 *
 * Note: The returned string ownership is transferred to the caller, and should
 * be freed with `fdo_free_string`
 */
const char *fdo_ownershipvoucher_header_get_guid(const struct FdoOwnershipVoucher *v);

/**
 * Returns the device info of the ownership voucher if it is a string
 *
 * Return value:
 * NULL on error or if Device Info is not a string
 * Pointer to a string containing the Device Info on success
 *
 * Note: The returned string ownership is transferred to the caller, and should
 * be freed with `fdo_free_string`
 */
const char *fdo_ownershipvoucher_header_get_device_info_string(const struct FdoOwnershipVoucher *v);

#endif /* FDO_DATA_H */
